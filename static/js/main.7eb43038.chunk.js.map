{"version":3,"sources":["utils/login.js","pages/login/index.js","components/academy/Academy.js","components/academy/AcademyList.js","pages/home/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["checkAccountValidation","account","test","checkPasswordValidation","password","App","state","accountInvalid","passwordInvalid","validated","loading","handleSubmit","event","preventDefault","_this$form","_this","form","value","setState","setTimeout","props","history","push","_this2","this","_this$state","console","log","react_default","a","createElement","className","Form","ref","onSubmit","e","Group","controlId","Label","Control","type","name","isInvalid","placeholder","required","Feedback","Text","Button","variant","Spinner","animation","role","Component","Academy","_ref","academy","id","title","onClick","AcademyList","academies","Array","isArray","length","Table","striped","bordered","hover","map","academy_Academy","key","HomePage","Fragment","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","style","justifyContent","inline","margin","Tabs","defaultActiveKey","Tab","eventKey","academy_AcademyList","withRouter","react_router_dom","react_router","path","exact","component","Login","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gUAAaA,EAAyB,SAACC,GACrC,GAAuB,kBAAZA,EAAsB,OAAO,EAGxC,QADU,sBACFC,KAAKD,IAOFE,EAA0B,SAACC,GACtC,GAAwB,kBAAbA,EAAuB,OAAO,EAGzC,QADU,0BACFF,KAAKE,ICiFAC,oNAzFbC,MAAQ,CACNC,gBAAgB,EAChBC,iBAAiB,EACjBC,WAAW,EACXC,SAAS,KAGXC,aAAe,SAACC,GACdA,EAAMC,iBADkB,IAAAC,EAEMC,EAAKC,KAA3Bf,EAFgBa,EAEhBb,QAASG,EAFOU,EAEPV,SACZJ,EAAuBC,EAAQgB,QAAWd,EAAwBC,EAASa,QAO9EF,EAAKG,SAAS,CAAET,WAAW,EAAMC,SAAS,IAC1CS,WAAW,WACTJ,EAAKK,MAAMC,QAAQC,KAAK,UACvB,OATHV,EAAMC,iBACNE,EAAKG,SAAS,CACZX,gBAAgB,EAChBC,iBAAiB,8EAUd,IAAAe,EAAAC,KAAAC,EACyDD,KAAKlB,MAA7DC,EADDkB,EACClB,eAAgBC,EADjBiB,EACiBjB,gBAAiBC,EADlCgB,EACkChB,UAAWC,EAD7Ce,EAC6Cf,QAEpD,OADAgB,QAAQC,IAAIH,KAAKJ,OAEfQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,+DAEFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEC,IAAK,SAAAjB,GAAI,OAAIO,EAAKP,KAAOA,GACzBP,UAAWA,EACXyB,SAAU,SAAAC,GAAC,OAAIZ,EAAKZ,aAAawB,KAEjCP,EAAAC,EAAAC,cAACE,EAAA,EAAKI,MAAN,CAAYC,UAAU,oBACpBT,EAAAC,EAAAC,cAACE,EAAA,EAAKM,MAAN,gBACAV,EAAAC,EAAAC,cAACE,EAAA,EAAKO,QAAN,CACEC,KAAK,OACLC,KAAK,UACLC,UAAWnC,EACXoC,YAAY,gBACZC,UAAQ,IAEVhB,EAAAC,EAAAC,cAACE,EAAA,EAAKO,QAAQM,SAAd,CAAuBL,KAAK,WAA5B,gCAGAZ,EAAAC,EAAAC,cAACE,EAAA,EAAKc,KAAN,CAAWf,UAAU,cAArB,0DAKFH,EAAAC,EAAAC,cAACE,EAAA,EAAKI,MAAN,CAAYC,UAAU,qBACpBT,EAAAC,EAAAC,cAACE,EAAA,EAAKM,MAAN,iBACAV,EAAAC,EAAAC,cAACE,EAAA,EAAKO,QAAN,CACEC,KAAK,WACLC,KAAK,WACLC,UAAWlC,EACXmC,YAAY,iBACZC,UAAQ,IAEVhB,EAAAC,EAAAC,cAACE,EAAA,EAAKO,QAAQM,SAAd,CAAuBL,KAAK,WAA5B,gCAGAZ,EAAAC,EAAAC,cAACE,EAAA,EAAKc,KAAN,CAAWf,UAAU,cAArB,uEAKFH,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQC,QAAQ,UAAUR,KAAK,UAA/B,WAKH9B,GACCkB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,UAC/BvB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WAAhB,wBAjFIqB,8CCOHC,EAVC,SAAAC,GAAiB,IAAdC,EAAcD,EAAdC,QACf,GAAc,MAAXA,EAAiB,OAAO,KADE,IAEtBC,EAAaD,EAAbC,GAAIC,EAASF,EAATE,MACX,OAAO7B,EAAAC,EAAAC,cAAA,UACPF,EAAAC,EAAAC,cAAA,UAAK0B,GACL5B,EAAAC,EAAAC,cAAA,UAAK2B,GACL7B,EAAAC,EAAAC,cAAA,cAAKF,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQC,QAAQ,OAAOU,QAAS,cAAhC,kBCgBMC,EArBK,SAAAL,GAAmB,IAAhBM,EAAgBN,EAAhBM,UACrB,OAAIC,MAAMC,QAAQF,IAAcA,EAAUG,OAAS,EAE/CnC,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,GAC3BvC,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,aAGJF,EAAAC,EAAAC,cAAA,aACG8B,EAAUQ,IAAI,SAACb,GAAD,OAAY3B,EAAAC,EAAAC,cAACuC,EAAD,CAASd,QAASA,EAASe,IAAKf,EAAQC,SAKlE,MCVLI,EAAY,CAChB,CACEJ,GAAI,EACJC,MAAO,iBAET,CACED,GAAI,EACJC,MAAO,iBAET,CACED,GAAI,EACJC,MAAO,kBAGLc,mLAEF,OACE3C,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2C,SAAA,KACE5C,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,MACxB/C,EAAAC,EAAAC,cAAC2C,EAAA,EAAOG,MAAR,CAAcC,KAAK,SAAnB,4BACAjD,EAAAC,EAAAC,cAAC2C,EAAA,EAAOK,OAAR,CAAeC,gBAAc,qBAC7BnD,EAAAC,EAAAC,cAAC2C,EAAA,EAAOO,SAAR,CACExB,GAAG,mBACHyB,MAAO,CAAEC,eAAgB,aAEzBtD,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMmD,QAAM,GACVvD,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQC,QAAQ,mBAAhB,mBAINpB,EAAAC,EAAAC,cAAA,OAAKmD,MAAO,CAAEG,OAAQ,KACpBxD,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAMC,iBAAiB,OAAO9B,GAAG,4BAC/B5B,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAAKC,SAAS,OAAO/B,MAAM,kCACzB7B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC2D,EAAD,CAAa7B,UAAWA,QAjBlC,YAHiBR,aA+BRsC,cAAWnB,GCtCXlE,0LATX,OACEuB,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,KACE/D,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWC,IACjCpE,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,CAAOC,KAAK,QAAQE,UAAWxB,YALrBnB,cCKE6C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,iECVNC,IAASC,OAAO3E,EAAAC,EAAAC,cAAC0E,EAAD,MAASC,SAASC,eAAe,SDyH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.7eb43038.chunk.js","sourcesContent":["export const checkAccountValidation = (account) => {\n  if (typeof account !== 'string') return false\n\n  var reg = /^[a-zA-Z0-9]{2,20}$/;\n  if (reg.test(account)) {\n    return true\n  } else {\n    return false\n  }\n}\n\nexport const checkPasswordValidation = (password) => {\n  if (typeof password !== 'string') return false\n\n  var reg = /^[\\w!@#$%^&*,.?]{8,20}$/;\n  if (reg.test(password)) {\n    return true\n  } else {\n    return false\n  }\n}","import React, { Component } from 'react';\nimport { Form, Button, Spinner } from 'react-bootstrap';\n\nimport { checkAccountValidation, checkPasswordValidation } from '../../utils/login'\nimport './index.css';\n\nclass App extends Component {\n  state = {\n    accountInvalid: false,\n    passwordInvalid: false,\n    validated: false,\n    loading: false\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { account, password } = this.form\n    if (!checkAccountValidation(account.value) || !checkPasswordValidation(password.value)) {\n      event.preventDefault()\n      this.setState({\n        accountInvalid: true,\n        passwordInvalid: true,\n      })\n    } else {\n      this.setState({ validated: true, loading: true });\n      setTimeout(() =>{\n        this.props.history.push('/home');\n      }, 500)\n    }\n  }\n\n  render() {\n    const { accountInvalid, passwordInvalid, validated, loading } = this.state\n    console.log(this.props);\n    return (\n      <div className=\"login-container\">\n        <div className=\"login-title\">\n          <h1>思沃学院在线学习</h1>\n        </div>\n        <div className=\"form-wrapper\">\n          <Form\n            ref={form => this.form = form}\n            validated={validated}\n            onSubmit={e => this.handleSubmit(e)}\n          >\n            <Form.Group controlId=\"formBasicAccount\">\n              <Form.Label>Account</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"account\"\n                isInvalid={accountInvalid}\n                placeholder=\"Enter Account\"\n                required\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                Invalid username or password\n              </Form.Control.Feedback>\n              <Form.Text className=\"text-muted\">\n                账号为2-20位英文,数字\n              </Form.Text>\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                name=\"password\"\n                isInvalid={passwordInvalid}\n                placeholder=\"Enter Password\"\n                required\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                Invalid username or password\n              </Form.Control.Feedback>\n              <Form.Text className=\"text-muted\">\n                账号为8-20位英文,数字,标点\n              </Form.Text>\n            </Form.Group>\n\n            <Button variant=\"primary\" type=\"submit\">\n              Login\n            </Button>\n          </Form>\n        </div>\n        {loading && (\n          <div className=\"loading-modal\">\n            <Spinner animation=\"border\" role=\"status\">\n              <span className=\"sr-only\">Loading...</span>\n            </Spinner>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\n\nconst Academy = ({ academy }) => {\n    if(academy == null) return null;\n    const {id, title} = academy;\n    return <tr>\n    <td>{id}</td>\n    <td>{title}</td>\n    <td> <Button variant=\"info\" onClick={()=>{}}>View Detail</Button></td>\n    </tr>\n};\n\nexport default Academy;\n","import React from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport Academy from './Academy';\n\nconst AcademyList = ({ academies }) => {\n  if (Array.isArray(academies) && academies.length > 0) {\n    return (\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>No.</th>\n            <th>Title</th>\n            <th />\n          </tr>\n        </thead>\n        <tbody>\n          {academies.map((academy) =><Academy academy={academy} key={academy.id} />)}\n        </tbody>\n      </Table>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport default AcademyList;\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport {\n  Navbar,\n  Form,\n  Tab,\n  Tabs,\n  Button\n} from \"react-bootstrap\";\nimport { AcademyList } from \"./../../components/academy\";\n\nconst academies = [\n  {\n    id: 1,\n    title: \"Agile Theory1\"\n  },\n  {\n    id: 2,\n    title: \"Agile Theory2\"\n  },\n  {\n    id: 3,\n    title: \"Agile Theory3\"\n  }\n];\nclass HomePage extends Component {\n  render() {\n    return (\n      <>\n        <Navbar bg=\"light\" expand=\"lg\">\n          <Navbar.Brand href=\"#home\">思沃学院</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse\n            id=\"basic-navbar-nav\"\n            style={{ justifyContent: \"flex-end\" }}\n          >\n            <Form inline>\n              <Button variant=\"outline-success\">注销</Button>\n            </Form>\n          </Navbar.Collapse>\n        </Navbar>\n        <div style={{ margin: 50 }}>\n          <Tabs defaultActiveKey=\"home\" id=\"uncontrolled-tab-example\">\n            <Tab eventKey=\"home\" title=\"特训营列表\">\n              <div>\n                <AcademyList academies={academies} />\n              </div>\n            </Tab>\n          </Tabs>\n        </div>\n        ;\n      </>\n    );\n  }\n}\n\nexport default withRouter(HomePage);\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\nimport Login from './pages/login'\nimport HomePage from './pages/home/HomePage'\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Route path=\"/\" exact component={Login}/>\n        <Route path=\"/home\" component={HomePage}/>\n      </Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}